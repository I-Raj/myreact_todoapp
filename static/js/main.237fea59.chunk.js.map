{"version":3,"sources":["logo.svg","webpack:///./src/logo.svg?cfe7","ListItems.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListItems","props","listItems","items","map","item","className","type","id","time","value","task","onChange","e","setupdate","target","onClick","deleteitem","firstcomponent","state","currentitem","handlechange","bind","addtasktolist","event","this","setState","Date","now","preventDefault","newitem","newitems","key","filtereditems","filter","console","log","newlist","placeholder","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,oKCoC5B,I,YCpBAC,MAbf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAExB,OAAO,yBAAKC,UAAY,QACpB,2BAAOC,KAAO,OAAOC,GAAMH,EAAKI,KAAMC,MAASL,EAAKM,KAAMC,SAAY,SAACC,GAAD,OAAOZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,SAClH,4BAAQF,KAAO,SAASS,QAAW,kBAAMf,EAAMgB,WAAWZ,EAAKI,QAA/D,gBAGR,OACI,6BAAMP,ICqECgB,E,kDA3EX,WAAYjB,GAAO,IAAD,8BAClB,cAAMA,IACDkB,MAAQ,CACbhB,MAAQ,GACRiB,YAAc,CACJT,KAAO,GACPF,KAAO,KAGjB,EAAKY,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKL,WAAa,EAAKA,WAAWK,KAAhB,gBAClB,EAAKR,UAAY,EAAKA,UAAUQ,KAAf,gBAZC,E,yDAcNE,GACTC,KAAKC,SAAS,CACZN,YAAa,CACPT,KAAOa,EAAMT,OAAOL,MACpBD,KAAOkB,KAAKC,W,oCAIXJ,GACZA,EAAMK,iBACH,IAAMC,EAAUL,KAAKN,MAAMC,YAC3B,GAAoB,KAAjBU,EAAQnB,KAAY,CACvB,IAAMoB,EAAQ,sBAAON,KAAKN,MAAMhB,OAAlB,CAAyB2B,IACvCL,KAAKC,SAAS,CACTvB,MAAQ4B,EACRX,YAAc,CACZT,KAAO,GACPF,KAAO,S,iCAMVuB,GACV,IAAMC,EAAgBR,KAAKN,MAAMhB,MAAM+B,QAAO,SAAA7B,GAAI,OAAIA,EAAKI,OAASuB,KACpEG,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZR,KAAKC,SAAS,CACZvB,MAAQ8B,M,gCAIDtB,EAAMqB,GACf,IAAMK,EAAUZ,KAAKN,MAAMhB,MAC3BkC,EAAQjC,KAAI,SAAAC,GACPA,EAAKI,OAASuB,IACf3B,EAAKM,KAAOA,MAGhBc,KAAKC,SAAS,CACZvB,MAAQkC,M,+BAOP,OACE,yBAAK/B,UAAY,QACjB,gCACE,0BAAME,GAAK,eACR,2BAAOD,KAAO,OAAO+B,YAAY,wBAAwB5B,MAASe,KAAKN,MAAMC,YAAYT,KAAMC,SAAYa,KAAKJ,eAChH,4BAAQd,KAAO,SAASS,QAAWS,KAAKF,eAAxC,WAGL,kBAAC,EAAD,CAAWpB,MAASsB,KAAKN,MAAMhB,MAAOc,WAAcQ,KAAKR,WAAYH,UAAWW,KAAKX,WAArF,U,GAvEuByB,IAAMC,WCOfC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvB,QAAQuB,MAAMA,EAAMC,c","file":"static/js/main.237fea59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './ListItems.css'\n\nfunction ListItems(props){\n    const items = props.items;\n    const listItems = items.map(item => \n        {\n        return <div className = \"list\">\n            <input type = \"text\" id = {item.time} value = {item.task} onChange = {(e) => props.setupdate(e.target.value, item.time)}></input>\n            <button type = \"submit\" onClick = {() => props.deleteitem(item.time)}> Delete </button>\n        </div>\n    })\n    return (\n        <div>{listItems}</div>\n    )\n}\nexport default ListItems;","import React from 'react';\nimport logo, { ReactComponent } from './logo.svg';\nimport './App.css';\nimport ListItems from './ListItems.js'\n\nclass firstcomponent extends React.Component\n{\n    constructor(props){\n    super(props);\n    this.state = {\n    items : [ ],\n    currentitem : {\n              task : '',\n              time : ''\n    }\n    }\n    this.handlechange = this.handlechange.bind(this);\n    this.addtasktolist = this.addtasktolist.bind(this);\n    this.deleteitem = this.deleteitem.bind(this);\n    this.setupdate = this.setupdate.bind(this);\n  }\n   handlechange(event){\n       this.setState({\n         currentitem :{\n               task : event.target.value,\n               time : Date.now()\n         }\n        })\n  }\n  addtasktolist(event){\n    event.preventDefault();\n       const newitem = this.state.currentitem; \n       if(newitem.task !== \"\"){\n       const newitems = [...this.state.items, newitem];\n       this.setState({\n            items : newitems,\n            currentitem : {\n              task : '',\n              time : ''\n            }\n          }) \n}\n}\n\ndeleteitem(key){\n const filtereditems = this.state.items.filter(item => item.time !== key);\n console.log(key);\n console.log(filtereditems);\n this.setState({\n   items : filtereditems\n })\n}\n\nsetupdate(task, key){\n const newlist = this.state.items;\n newlist.map(item => {\n   if(item.time === key){\n     item.task = task;\n   }\n })\n this.setState({\n   items : newlist\n })\n}\n\n  render(){\n    //console.log(this.state.currentitem);\n    //console.log(this.state.items);\n    return (\n      <div className = \"form\">\n      <header> \n        <form id = \"to-do-tasks\">\n           <input type = \"text\" placeholder=\"Enter tasks for today\" value = {this.state.currentitem.task} onChange = {this.handlechange}></input>\n           <button type = \"submit\" onClick = {this.addtasktolist}> Add </button>\n        </form>\n      </header>\n      <ListItems items = {this.state.items} deleteitem = {this.deleteitem} setupdate={this.setupdate}> </ListItems>\n      </div>\n    );\n  }\n}\n\nexport default firstcomponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}